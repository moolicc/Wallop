name: Create new release branch
on:
  workflow_dispatch:
    inputs:
      versionPrefix:
        description: 'Version number (ie 1.0.0)'
        required: true
      versionSuffix:
        description: 'Version suffix (ie alef)'
        required: true
        
env:
  DOTNET_VERSION: 'v6.0.301' # The .NET SDK version to use

jobs:      
  #build:
    #name: build-${{ matrix.os }}
    #runs-on: ${{ matrix.os }}
    #strategy:
      #matrix:
        #os: [windows-latest]
    #steps:
    
    #- uses: actions/checkout@v3
    #- name: Setup .NET Core
    #  uses: actions/setup-dotnet@v2.1.0
    #  with:
    #    dotnet-version: ${{ env.DOTNET_VERSION }}
        
   # - name: Install dependencies
   #   run: dotnet restore ./src/
      
   # - name: Build
    #  run: dotnet build ./src/ --no-restore
      
      
  create-release-branch:
    #needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Create release branch
      run: git checkout -b release/v${{ github.event.inputs.versionPrefix }}
      
    - name: Setup git config
      run: |
       git config user.name "GitHub Actions"
       git config user.email noreply@github.com
       
    - name: Change version number and name of project
      shell: pwsh
      run: |
        ./util/set_version.ps1 engine "${{ github.event.inputs.versionPrefix }}" "${{ github.event.inputs.versionSuffix }}"
  
    - name: Commit version change
      run: |
        git add .
        git commit -m "Prepare release ${{ github.event.inputs.versionPrefix }}-${{ github.event.inputs.versionSuffix }}"
        echo "::set-output name=commit::$(git rev-parse HEAD)"
        
    - name: Push changes
      run: git push origin release/v${{ github.event.inputs.versionPrefix }}
      
  
  create-pull-requests:
      needs: create-release-branch
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            ref: release/v${{ github.event.inputs.versionPrefix }}

        - name: Setup git config
          run: |
            git config user.name "GitHub Actions"
            git config user.email noreply@github.com

        - name: Build changelog
          id: build-changelog
          uses: heinrichreimer/github-changelog-generator-action@v2.3
          with:
            token: ${{ secrets.GITHUB_TOKEN }} 
            output: "./CHANGELOG.md"
            excludeLabels: changelog-ignore

        #- name: Commit changelog
          #run: |          
            #git add .
            #git commit --message "Added changelog for release"
            #echo "::set-output name=commit::$(git rev-parse HEAD)"

        #- name: Push changelog
          #run: git push

        #- name: Create Pull Request into develop
          #uses: peter-evans/create-pull-request@v4
          #with:
            #commit-message: A new release has been made to develop
            #title: "New release to develop pending ðŸ¤– ${{ github.event.inputs.versionPrefix }} ${{ github.event.inputs.versionSuffix }}"
            #body: "PR created by the creation of a new release branch. Merge in when you can get around to it. Changes contained here-in should mostly just be the changelog."
            #branch: release/v${{ github.event.inputs.versionPrefix }}
            #base: develop
            #labels: changelog-ignore

            
        - name: Create Pull Request into main
          uses: peter-evans/create-pull-request@v4
          with:
            commit-message: A new release has been made to main
            title: "New release to main pending ðŸ¤– ${{ github.event.inputs.versionPrefix }} ${{ github.event.inputs.versionSuffix }}"
            body: "PR created by the creation of a new release branch. Merge in when you can get around to it. Changes contained here-in should mostly just be the changelog."
            branch: release/v${{ github.event.inputs.versionPrefix }}
            base: main
            labels: changelog-ignore
          
  merge-develop:
    needs: create-pull-requests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop
        uses: actions/checkout@v3
        with:
          ref: develop
            
      - name: Merge with develop
        run: |
          git fetch
          git pull
          git checkout release/v${{ github.event.inputs.versionPrefix }}
          git fetch
          git pull
          git checkout develop
          git merge release/v${{ github.event.inputs.versionPrefix }}
          git commit -m "Merge new release branch"
          git push
          
  create-release:
    needs: create-pull-requests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: release/v${{ github.event.inputs.versionPrefix }}
      

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ github.event.inputs.versionPrefix }}-${{ github.event.inputs.versionSuffix }}.pre"
          commit: "release/v${{ github.event.inputs.versionPrefix }}"
          bodyFile: "./CHANGELOG.md"
          token: ${{ secrets.GITHUB_TOKEN }}
